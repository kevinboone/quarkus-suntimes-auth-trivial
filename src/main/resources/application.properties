# application.properties file for quarkus-suntimes-auth-trivial

# Note that this file containers build-time and run-time settings. The latter
#   can be overridden using environment variables.

# Basic Quarkus configuration

quarkus.banner.enabled = false
quarkus.log.file.enable = false 
# Set specific log levels, if necessary
#quarkus.log.category."org.apache.camel".level=DEBUG
quarkus.log.category."me.kevinboone".level=FINE

# Remove this line if you don't need to build a stand-alone JAR (e.g.,
#   you always run using "quarkus dev")
quarkus.package.type=uber-jar

# Define which files contain Camel routes. Note that this is build-time
#   setting -- it's relative to the source, not to the classpath
camel.main.routes-include-pattern = file:src/main/resources/routes/camel-routes.xml

# TLS configuration. We need a Java keystore and a password to open
#   it. Quarkus also supports separate key and certificate files. 
# Location of the keystore, relative to the classpath. If Quarkus doesn't
#   find it on the classpath it will look for a real filesystem path.
quarkus.http.ssl.certificate.key-store-file=keystore.jks
# Keystore password -- set when the keystore was created.
quarkus.http.ssl.certificate.key-store-password=changeit

# Use HTTP Basic Authentication: user and password send as request headers.
quarkus.http.auth.basic=true

# Define which HTTP URLs are to be authorized. In this case, all the
#   applications URLs begin with /suntimes. The /health API will
#   not be authenticated, so is open to all callers.
# Note that "permit-suntimes" is just a token that groups settings for
#   specific endpoints (we only have one secured enpoint in this case). 
quarkus.http.auth.policy.permit-suntimes.roles-allowed=user
quarkus.http.auth.permission.roles1.policy=permit-suntimes
quarkus.http.auth.permission.roles1.paths=/suntimes/*

# Configure file-based security. This is provided by the 
#   `quarkus-elytron-security-properties-file` module. 
# Files are relatively to the classpath, or on the filesystem if
#   not found there.
quarkus.security.users.file.enabled=true
quarkus.security.users.file.users=users.properties
quarkus.security.users.file.roles=roles.properties
quarkus.security.users.file.realm-name=MyRealm
quarkus.security.users.file.plain-text=false

# Disable the plaintext port if required, or use 'redirect' to redirect
#   requests to the TLS port. NB -- default ports are 8080 and 8443.
#quarkus.http.insecure-requests=disabled

